/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = "https://maven.pkg.github.com/kishieel/java-message-broker-proto"
        credentials {
            username = githubActor
            password = githubToken
        }
    }
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    implementation 'pl.edu.pk.student.tomaszkisiel.jmb:proto:1.0.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'pl.edu.pk.student.tomaszkisiel.jmb'
            artifactId = 'proto'
            version = '1.0.0'

            from components.java
        }
    }
    repositories {
        maven {
            name = "JMPProto"
            url = "https://maven.pkg.github.com/kishieel/java-message-broker"
            credentials {
                username = githubActor
                password = githubToken
            }
        }
    }
}

tasks.register('exampleServer', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "pl.edu.pk.student.tomaszkisiel.jmb.examples.ServerExample"
}

tasks.register('examplePrimitives', JavaExec) {
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "pl.edu.pk.student.tomaszkisiel.jmb.examples.PrimitiveExample"
}

tasks.register('examplePojo', JavaExec) {
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "pl.edu.pk.student.tomaszkisiel.jmb.examples.PojoExample"
}
